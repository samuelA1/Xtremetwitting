{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-changes.guard.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/tweet.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/addAndGetTweets/addAndGetTweets.component.css","webpack:///./src/app/addAndGetTweets/addAndGetTweets.component.html","webpack:///./src/app/addAndGetTweets/addAndGetTweets.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/followers/followers.component.css","webpack:///./src/app/followers/followers.component.html","webpack:///./src/app/followers/followers.component.ts","webpack:///./src/app/following/following.component.css","webpack:///./src/app/following/following.component.html","webpack:///./src/app/following/following.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/suggestions/suggestions.component.css","webpack:///./src/app/suggestions/suggestions.component.html","webpack:///./src/app/suggestions/suggestions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { JwtHelperService } from '@auth0/angular-jwt';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  helper = new JwtHelperService()\n\nconstructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,): Observable<boolean> | Promise<boolean> | boolean {\n      var token = localStorage.getItem('token');\n      if (!this.helper.isTokenExpired(token)) return true;\n\n      this.router.navigate(['/login', {returnUrl: state.url}]);\n      return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { AddAndGetTweetsComponent } from '../addAndGetTweets/addAndGetTweets.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventChangesGuard implements CanDeactivate<AddAndGetTweetsComponent> {\n  canDeactivate(component: AddAndGetTweetsComponent) {\n    if (component.f.dirty) {\n      return confirm('Are you sure you want to continue? All unsaved changes will be lost')\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable()\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm (message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n        if (e) {\n            okCallback();\n        } else {}\n    });\n}\n\nsuccess(message: string) {\n    alertify.success(message);\n}\n\nerror(message: string) {\n    alertify.error(message);\n}\n\nwarning(message: string) {\n    alertify.warning(message);\n}\n\nmessage(message: string) {\n    alertify.message(message);\n}\n}","import { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  apiUrl = environment.apiUrl;\n  user: any;\n  helper = new JwtHelperService();\n  text: string;\n\n\nconstructor(private http: HttpClient) { }\n\nget headers() {\n  const token = localStorage.getItem('token');\n  return token ? new HttpHeaders().set('Authorization', token) : null;\n}\n\nregister(model: any) {\n  return this.http.post(this.apiUrl + 'auth/register', model).toPromise()\n  .then((res) => {\n    this.user = this.helper.decodeToken(res['token'])\n    this.text = 'Sign out'\n    return res;\n  })\n}\n\nlogin(model: any) {\n  return this.http.post(this.apiUrl + 'auth/login', model).toPromise()\n  .then((res) => {\n    this.user = this.helper.decodeToken(res['token'])\n    this.text = 'Sign out'\n    return res;\n  })\n\n}\n\n\n\n}\n","import { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetService {\n  apiUrl = environment.apiUrl;\n  tweet = new BehaviorSubject<any>({tweet: 'See and read whats going on in the world from twitter daily',owner: {firstName: 'See all great',\n   lastName: 'adverts here ',\n    username: 'teamtwitter', picture: 'https://picsum.photos/200/300'\n  }});\n  recentTweet = this.tweet.asObservable();\n\nconstructor(private http: HttpClient) { }\n\nget headers() {\n  const token = localStorage.getItem('token');\n  return token ? new HttpHeaders().set('Authorization', token) : null;\n}\n\naddRecentTweet(tweet: any) {\n  this.tweet.next(tweet);\n}\n\n\ngetTweets() {\n  return this.http.get(this.apiUrl + 'recent', {headers: this.headers}).toPromise();\n}\n\npostTweet(tweet: any) {\n  return this.http.post(this.apiUrl + 'tweet',tweet, {headers: this.headers}).toPromise();\n}\n\ngetUserRecentTweets() {\n  return this.http.get(this.apiUrl + 'userRecent', {headers: this.headers}).toPromise();\n}\n\ndeleteTweet(id) {\n  return this.http.delete(this.apiUrl + 'tweet/' + id, {headers: this.headers}).toPromise();\n}\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  apiUrl = environment.apiUrl;\n\n\n  constructor(private http: HttpClient) { }\n\n  get headers() {\n    const token = localStorage.getItem('token');\n    return token ? new HttpHeaders().set('Authorization', token) : null;\n  }\n\ngetAllUsers() {\n  return this.http.get(this.apiUrl + 'users', {headers: this.headers}).toPromise();\n}\n\ngetSuggestions() {\n  return this.http.get(this.apiUrl + 'follow/suggestions', {headers: this.headers}).toPromise();\n}\n\nfollowSomeone(id) {\n  return this.http.post(this.apiUrl + 'follow/follow/' + id, {}, {headers: this.headers}).toPromise();\n}\n\nunfollowSomeone(id) {\n  return this.http.post(this.apiUrl + 'follow/unfollow/' + id, {}, {headers: this.headers}).toPromise();\n}\n\ngetUserTweets() {\n  return this.http.get(this.apiUrl + 'tweet', {headers: this.headers}).toPromise();\n}\n\ngetUserFollowersFollowing(id) {\n  return this.http.get(this.apiUrl + 'follow/followers/following/' + id, {headers: this.headers}).toPromise();\n}\n\ngetUser(id) {\n  return this.http.get(this.apiUrl + 'user/' + id, {headers: this.headers}).toPromise();\n}\n\nupDateProfile(profile: any) {\n  return this.http.post(this.apiUrl + 'profile/profile', profile, {headers: this.headers}).toPromise();\n}\n}\n","module.exports = \".card-body {\\r\\n    width: 335px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    width: 335px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    border-radius: 50%;\\r\\n    width: 40px;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    width: 300px;\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n.readyToTweet{\\r\\n    background-color: #E8F5FD;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    .card-body {\\r\\n        width: 510px;\\r\\n    }\\r\\n    \\r\\n    .card {\\r\\n        width: 510px;\\r\\n    }\\r\\n    textarea {\\r\\n        width: 450px;\\r\\n        }\\r\\n    .btn-primary{\\r\\n        float: left;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 0px) and  (max-width: 767px) {\\r\\n    .card {\\r\\n        margin-left: 13px;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n<div class=\\\"card readyToTweet\\\">\\n  <div class=\\\"card-body\\\">\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"postTweet()\\\" class=\\\"text-center\\\">\\n      <div class=\\\"form-group \\\">\\n          <label for=\\\"tweet\\\">What's on your mind?<textarea name=\\\"tweet\\\" class=\\\"form-control\\\" id=\\\"tweet\\\" \\n            rows=\\\"1\\\" [(ngModel)]=\\\"tweet.tweet\\\" (keyup)=\\\"keepTweet()\\\">\\n          </textarea>\\n          </label>\\n      </div>\\n      <button [disabled]=\\\"!f.dirty\\\" type=\\\"submit\\\" class=\\\"btn btn-primary text-center\\\">Tweet</button>\\n  </form> \\n  </div>\\n</div>\\n            \\n         \\n\\n\\n<div class=\\\"card\\\" *ngFor=\\\"let tweet of tweets\\\">\\n    <div class=\\\"card-body list-inline\\\">\\n        <a routerLink=\\\"/profile/{{tweet.owner?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" >\\n          <img class=\\\"list-inline-item\\\" src=\\\"{{tweet.owner?.picture}}\\\" alt=\\\"{{tweet.owner?.username}}\\\"\\n          class=\\\"mr-3\\\">\\n        </a>\\n        <a routerLink=\\\"/profile/{{tweet.owner?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" >\\n          <h6 class=\\\"card-title list-inline-item\\\">{{tweet.owner?.firstName | titlecase}} {{tweet.owner?.lastName | titlecase}}\\n              <strong>@{{tweet.owner?.username}}</strong></h6>\\n        </a>\\n        <p class=\\\"card-text mt-3\\\">{{tweet.tweet}}</p>\\n      <small class=\\\"text-muted \\\">{{tweet.dateTweeted | timeAgo}}</small>\\n      <button *ngIf=\\\"tweet.owner?.username == authService.user.user.username\\\"\\n       class=\\\"btn btn-danger btn-sm  float-right\\\" type=\\\"button\\\" (click)=\\\"deleteTweet(tweet._id)\\\">Delete</button>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { TweetService } from '../_services/tweet.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-addAndGetTweets',\n  templateUrl: './addAndGetTweets.component.html',\n  styleUrls: ['./addAndGetTweets.component.css']\n})\nexport class AddAndGetTweetsComponent implements OnInit {\n  @ViewChild('f') f: NgForm;\n  @Output() reduce = new EventEmitter();\ntoken: any;\ntweet: any = {}\ntweets: any[];\n  \n\n  constructor(private userService: TweetService,\n     private alertify: AlertifyService, \n    private authService: AuthService,\n    ) { }\n\n  async getTweets() {\n    try {\n      var tweets = await this.userService.getTweets();\n      var recentTweets = await this.userService.getUserRecentTweets();\n      if (tweets['success']) {\n        var huge = tweets['tweets'].concat(recentTweets['tweets']);\n        this.tweets = huge.sort( function ( a, b ) { return b.dateTweeted - a.dateTweeted; } )\n      } else {\n        this.alertify.message('No tweets')\n      }\n    } catch (error) {\n      this.alertify.error(error.message);\n    }\n  } \n\n  async postTweet() {\n    try {\n      if (this.tweetValidation()) {\n        this.tweets.unshift({dateTweeted: Date.now(),\n        tweet: this.tweet['tweet'], owner: {firstName: this.authService.user.user.firstName,\n        lastName: this.authService.user.user.lastName, username: this.authService.user.user.username,\n        picture: this.authService.user.user.picture\n      }});\n        const tweet = await this.userService.postTweet(this.tweet);\n        if (tweet['success']) {\n          this.f.reset();\n          this.alertify.success('Tweet created');\n          localStorage.removeItem('tweet');\n          this.reduce.emit(1);\n        } else {\n          this.alertify.error('Unable to create tweet')\n        }\n      } else {\n        this.alertify.error('Please enter a tweet')\n      }\n    } catch (error) {\n      this.alertify.error(error.message);\n    }\n  }\n\n  async deleteTweet(id) {\n    this.alertify.confirm('Are you sure you want to delete this tweet?', () => {\n      this.userService.deleteTweet(id);\n      this.tweets.splice(this.tweets.findIndex(t => t._id === id), 1)\n      this.alertify.success('Tweet deleted');\n      this.reduce.emit(-1);\n    })\n  }\n\n  tweetValidation() {\n    if (this.tweet.tweet) {\n      return true\n    } else {\n      this.alertify.error('Please enter a tweet')\n    }\n  }\n  \n  async ngOnInit() {\n    this.token = localStorage.getItem('token');\n    await this.getTweets()\n    this.addRecentTweet()\n    this.keepTweet();\n  }\n\n  addRecentTweet() {\n    this.userService.recentTweet.subscribe(tweetObj => this.tweets.unshift(tweetObj))\n  }\n\n  keepTweet() {\n    if (this.tweet.tweet) {\n      localStorage.setItem('tweet', this.tweet.tweet)\n    } else if(this.tweet.tweet == '') {\n      localStorage.setItem('tweet', '')\n    } else {\n      this.tweet.tweet = localStorage.getItem('tweet');\n    }\n  }\n\n}\n","import { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from '../app/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: '',\n  runGuardsAndResolvers: 'always',\n  canActivate: [AuthGuard],\n  children: [\n  {path: 'profile/:id', component: ProfileComponent},\n]\n},\n{path: '**', redirectTo: '', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".navbar{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.btn-tweet {\\r\\n    border-radius: 100px;\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    border-radius: 50%;\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\ntextarea{\\r\\n    border-radius: 30px;\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\nimg:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.tooltip-inner {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    max-width: 400px;\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 0px) and  (max-width: 767px) {\\r\\n    .img-profile {\\r\\n        float: right;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"content\\\">\\n    <header>\\n        <div class=\\\"navbar navbar-dark bg-dark shadow-sm\\\">\\n          <div class=\\\"container d-flex justify-content-between\\\">\\n            <a [routerLink]=\\\"['']\\\" routerLinkActive=\\\"router-link-active\\\"  class=\\\"navbar-brand d-flex align-items-center\\\">\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 24 24\\\"\\n               fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"mr-2\\\">\\n               <path d=\\\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\\\"></path>\\n               <circle cx=\\\"12\\\" cy=\\\"13\\\" r=\\\"4\\\"></circle></svg>\\n              <strong>Twitter</strong>\\n            </a>\\n            <div *ngIf=\\\"authService.user?.user.username\\\">\\n              <app-search></app-search>\\n            </div>\\n            <div class=\\\"list-inline\\\">\\n                <img src=\\\"{{authService.user?.user.picture}}\\\" alt=\\\"{{authService.user?.user.username}}\\\"\\n                      class=\\\"mr-3 img-profile\\\" id=\\\"dropdownBasic1\\\" [ngbTooltip]=\\\"tipContent\\\" placement=\\\"bottom\\\" triggers=\\\"click\\\" [autoClose]=\\\"true\\\">\\n              <button *ngIf=\\\"authService.user?.user.username\\\" class=\\\"btn btn-primary btn-tweet\\\" (click)=\\\"openModal(template)\\\"><strong>Tweet</strong></button>\\n            </div>\\n          </div>\\n        </div>\\n      </header>\\n\\n      <!-- Modal template -->\\n      <ng-template #template>\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title pull-left\\\">Compose new Tweet</h4>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"confirm()\\\" >\\n            <span aria-hidden=\\\"true\\\">&times;</span></button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form #tweetForm =\\\"ngForm\\\" id=\\\"tweetForm\\\" >\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group\\\">\\n                <textarea name=\\\"tweet\\\" cols=\\\"10\\\" rows=\\\"3\\\" class=\\\"form-control\\\"\\n                 placeholder=\\\"What's happening?\\\" [(ngModel)]=\\\"tweet.tweet\\\"></textarea>\\n              </div>\\n            </div>\\n          </form>\\n          <button [disabled]=\\\"!tweetForm.dirty\\\" form=\\\"tweetForm\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n             (click)=\\\"modalRef.hide();postTweet()\\\">Save</button>\\n        </div>\\n      </ng-template>\\n\\n      <!-- Tooltip template -->\\n      <ng-template #tipContent>\\n        <div class=\\\"tooltip-inner\\\">\\n            <p><strong>{{authService.user?.user.firstName | titlecase}}  {{authService.user?.user.lastName | titlecase}}</strong></p>\\n            <p class=\\\"text-muted\\\">@{{authService.user?.user.username}}</p>\\n            <hr>\\n            <a [routerLink]=\\\"['/profile',authService.user?.user._id]\\\" routerLinkActive=\\\"router-link-active\\\" >\\n              <p><i class=\\\"far fa-user\\\"></i> Profile</p>\\n            </a>\\n            <a *ngIf=\\\"authService.user?.user.username\\\" (click)=\\\"logout()\\\" style=\\\"cursor: pointer\\\"><i class=\\\"fas fa-door-open\\\"></i> logout</a>\\n        </div>\\n      </ng-template>\\n            \\n    <router-outlet></router-outlet>\\n</div>\\n \\n\"","import { TweetService } from './_services/tweet.service';\nimport { Component, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AlertifyService } from './_services/alertify.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  modalRef: BsModalRef;\n  title = 'twitter';\n  token;\n  helper = new JwtHelperService();\n  tweet: any = {}\n\n\n\n  constructor(private router: Router,\n     public authService: AuthService,\n      private alertify: AlertifyService,\n      private userService: TweetService,\n      private modalService: BsModalService) {\n      this.token = localStorage.getItem('token')\n      authService.user = this.helper.decodeToken(this.token)\n      authService.text = 'Sign out'\n  \n  }\n\n  logout() {\n    this.router.navigate(['/login']);\n    this.authService.text = '';\n    this.authService.user.user = {}\n    localStorage.clear();\n    this.alertify.success('Logout successful')\n  }\n\n  async postTweet() {\n    try {\n      if (this.tweetValidation()) {\n        this.userService.addRecentTweet({dateTweeted: Date.now(),\n          tweet: this.tweet['tweet'], owner: {firstName: this.authService.user.user.firstName,\n          lastName: this.authService.user.user.lastName, username: this.authService.user.user.username,\n          picture: this.authService.user.user.picture\n        }});\n        const tweet = await this.userService.postTweet(this.tweet);\n        if (tweet['success']) {\n          this.alertify.success('Tweet created');\n        } else {\n          this.alertify.error('Unable to create tweet')\n        }\n      } else {\n        this.alertify.error('Please enter a tweet')\n      }\n    } catch (error) {\n      this.alertify.error(error.message);\n    }\n  }\n\n  tweetValidation() {\n    if (this.tweet.tweet) {\n      return true\n    } else {\n      this.alertify.error('Please enter a tweet')\n    }\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  confirm(): void {\n    if (this.tweet.tweet) {\n      this.alertify.confirm('Are you sure you want to discard this tweet?', () => {\n        this.modalRef.hide();\n      })\n    } else {\n      this.modalRef.hide();\n    }\n    \n  }\n\n  \n\n\n}\n","import { UserService } from './_services/user.service';\nimport { TweetService } from './_services/tweet.service';\nimport { AlertifyService } from './_services/alertify.service';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { AuthService } from './_services/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PreventChangesGuard } from './_guards/prevent-changes.guard';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from '../app/home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AddAndGetTweetsComponent } from './addAndGetTweets/addAndGetTweets.component';\nimport { TimeAgoPipe } from 'time-ago-pipe';\nimport { SearchComponent } from './search/search.component';\nimport { SuggestionsComponent } from './suggestions/suggestions.component';\nimport { FollowersComponent } from './followers/followers.component';\nimport { FollowingComponent } from './following/following.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      HomeComponent,\n      LoginComponent,\n      RegisterComponent,\n      SuggestionsComponent,\n      AddAndGetTweetsComponent,\n      TimeAgoPipe,\n      SearchComponent,\n      SuggestionsComponent,\n      FollowersComponent,\n      FollowingComponent,\n      ProfileComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      HttpClientModule,\n      NgbModule,\n      ModalModule.forRoot()\n   ],\n   providers: [\n      AuthService,\n      AuthGuard,\n      AlertifyService,\n      PreventChangesGuard,\n      UserService,\n      TweetService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \".btn-outline-primary {\\r\\n    border-radius: 100px;\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n    border-radius: 100px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"followers.length === 0\\\">\\n  <h1>Not being followered by anyone yet</h1>\\n</div>\\n<div *ngFor=\\\"let follower of followers\\\" class=\\\"card mb-3 mr-3\\\" style=\\\"width: 18rem; display: inline-block;\\\" \\n      >\\n    <div *ngIf=\\\"followers.length == 1 && follower._id == authService.user?.user._id\\\">\\n        <h1>You're the user following him</h1>\\n    </div>\\n    <div *ngIf=\\\"follower._id != authService.user?.user._id\\\">\\n      <a routerLink=\\\"/profile/{{follower?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"{{follower?.picture}}\\\" alt=\\\"follower?.username\\\" style=\\\"height: 100px;\\\">\\n      </a>\\n      <div class=\\\"card-body\\\">\\n          <button *ngIf=\\\"follower?.both\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right mr-5\\\" (click)=\\\"unfollow(follower?._id)\\\">unfollow</button>\\n          <button *ngIf=\\\"!follower?.both && authService.user?.user._id == userId\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary float-right mr-5\\\"\\n          (click)=\\\"follow(follower?._id)\\\">follow</button>\\n          <a routerLink=\\\"/profile/{{follower?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n            <strong>{{follower?.firstName | titlecase}} {{follower?.lastName | titlecase}}</strong>\\n          </a>\\n          <br>\\n          <small class=\\\"text-muted text-center\\\">@{{follower?.username}}</small>\\n        <div class=\\\"list-inline text-center\\\">\\n          <small class=\\\"list-inline-item mr-3\\\"><strong>Tweets</strong></small>\\n          <small class=\\\"list-inline-item mr-3\\\"><strong>Following</strong></small>\\n          <small class=\\\"list-inline-item mr-3\\\"><strong>Followers</strong></small>\\n        </div>\\n        <div class=\\\"list-inline text-center\\\">\\n            <h4 class=\\\"list-inline-item mr-5\\\">{{follower?.tweets?.length}}</h4>\\n            <h4 class=\\\"list-inline-item mr-5\\\">{{follower?.following?.length}}</h4>\\n            <h4 class=\\\"list-inline-item mr-5\\\">{{follower?.followers?.length}}</h4>\\n        </div>\\n        <small class=\\\"text-center text-muted\\\">Follows you</small>\\n      </div>\\n    </div>\\n</div>\"","import { AuthService } from './../_services/auth.service';\nimport { UserService } from './../_services/user.service';\nimport { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-followers',\n  templateUrl: './followers.component.html',\n  styleUrls: ['./followers.component.css']\n})\nexport class FollowersComponent implements OnInit {\n  @Output() toReduce = new EventEmitter();\n  @Input() userId: any\n  followers: any[];\n \n\n  constructor(private userService: UserService, \n    private alertify: AlertifyService, \n    public authService: AuthService) { }\n\n  async getFollowers(id) {\n    const follow = await this.userService.getUserFollowersFollowing(id)\n    this.followers = follow['followers'];\n  }\n\n  async ngOnInit() {\n    await this.getFollowers(this.userId);\n  }\n\n  async follow(id) {\n    await this.userService.followSomeone(id);\n    this.alertify.success('You just followed another user')\n    this.toReduce.emit(1);\n    var found = this.followers.find(u => u._id == id);\n    this.followers.push(Object.assign(found, {both: true}));\n  }\n\n  async unfollow(id) {\n    await this.userService.unfollowSomeone(id);\n    this.alertify.success('You just unfollowed another user');\n    this.toReduce.emit(-1);\n    var found = this.followers.find(u => u._id == id);\n    this.followers.push(Object.assign(found, {both: false}));\n  }\n\n  route() {\n    window.location.reload();\n  }\n}\n","module.exports = \".btn-outline-primary {\\r\\n    border-radius: 100px;\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n    border-radius: 100px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"followings.length == 0 \\\">\\n  <h1>Not following anyone yet</h1>\\n</div>\\n\\n<div *ngFor=\\\"let following of followings\\\" class=\\\"card mb-3 mr-3\\\" style=\\\"width: 18rem; display: inline-block;\\\" >\\n    <div *ngIf=\\\"followings?.length == 1 && following._id == authService.user?.user._id\\\">\\n        <h1>You're the user he's following</h1>\\n    </div>\\n   <div *ngIf=\\\"following._id != authService.user?.user._id\\\">\\n    <a routerLink=\\\"/profile/{{following?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n      <img class=\\\"card-img-top\\\" src=\\\"{{following?.picture}}\\\" alt=\\\"following?.username\\\" style=\\\"height: 100px;\\\">\\n    </a>\\n    <div class=\\\"card-body\\\">\\n        <button *ngIf=\\\"authService.user?.user._id == userId\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right mr-5\\\"\\n         (click)=\\\"unfollow(following?._id)\\\">unfollow</button>\\n        <a routerLink=\\\"/profile/{{following?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n          <strong>{{following?.firstName | titlecase}} {{following?.lastName | titlecase}}</strong>\\n        </a>\\n        <br>\\n        <small class=\\\"text-muted text-center\\\">@{{following?.username}}</small>\\n      <div class=\\\"list-inline text-center\\\">\\n        <small class=\\\"list-inline-item mr-3\\\"><strong>Tweets</strong></small>\\n        <small class=\\\"list-inline-item mr-3\\\"><strong>Following</strong></small>\\n        <small class=\\\"list-inline-item mr-3\\\"><strong>Followers</strong></small>\\n      </div>\\n      <div class=\\\"list-inline text-center\\\">\\n        <h4 class=\\\"list-inline-item mr-5\\\">{{following?.tweets?.length}}</h4>\\n        <h4 class=\\\"list-inline-item mr-5\\\">{{following?.following?.length}}</h4>\\n        <h4 class=\\\"list-inline-item mr-5\\\">{{following?.followers?.length}}</h4>\\n      </div>\\n      <small class=\\\"text-center text-muted\\\">Following</small>\\n    </div>\\n   </div>\\n</div>\"","import { AuthService } from './../_services/auth.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-following',\n  templateUrl: './following.component.html',\n  styleUrls: ['./following.component.css']\n})\nexport class FollowingComponent implements OnInit {\n  @Output() toReduce = new EventEmitter();\n  @Input() userId: any\n  followings: any[];\n\n\n  constructor(private userService: UserService, \n    private alertify: AlertifyService, \n    public authService: AuthService) { }\n\n  async getFollowing(id) {\n    const follow = await this.userService.getUserFollowersFollowing(id)\n    this.followings = follow['following'];\n  }\n\n  async ngOnInit() {\n    await this.getFollowing(this.userId);\n  }\n\n  async unfollow(id) {\n    await this.userService.unfollowSomeone(id);\n    this.alertify.success('You just unfollowed another user');\n    this.followings.splice(this.followings.findIndex(u=>u._id == id), 1);\n    this.toReduce.emit(-1);\n  }\n\n  route() {\n    window.location.reload();\n  }\n\n}\n","module.exports = \"\\r\\nimg {\\r\\n    border-radius: 50%;\\r\\n    width: 80px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n@media screen and (min-width: 0px) and (max-width: 1023px) {\\r\\n    .card { display: none;}   \\r\\n  }\\r\\n\\r\\n\"","module.exports = \"\\n\\n<div role=\\\"main\\\">\\n\\n  <section *ngIf=\\\"!token\\\" class=\\\" text-center\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"jumbotron-heading\\\">Join and follow Celebrities and Entrepreneurs</h1>\\n      <p class=\\\"lead text-muted\\\">It's free and will always be, signup now and enjoy a new social experience</p>\\n      <p>\\n        <a [routerLink]=\\\"['/login']\\\" routerLinkActive=\\\"router-link-active\\\"  class=\\\"btn btn-primary my-2 mr-2\\\">\\n          Login</a>\\n        <a [routerLink]=\\\"['/register']\\\" routerLinkActive=\\\"router-link-active\\\"  class=\\\"btn btn-secondary my-2\\\">\\n          Register</a>\\n      </p>\\n    </div>\\n  </section>\\n\\n  <div *ngIf=\\\"token\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-3\\\">\\n              <div class=\\\"card\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center\\\">\\n                        <a routerLink=\\\"/profile/{{authService.user?.user._id}}\\\" routerLinkActive=\\\"router-link-active\\\" >\\n                          <img src=\\\"{{authService.user?.user.picture}}\\\" alt=\\\"{{authService.user?.user.username}}\\\">\\n                        </a>\\n                      <br>\\n                      <a routerLink=\\\"/profile/{{authService.user?.user._id}}\\\" routerLinkActive=\\\"router-link-active\\\" >\\n                        <strong>{{authService.user?.user.firstName | titlecase}} {{authService.user?.user.lastName | titlecase}}</strong>\\n                      </a>\\n                      \\n                      <br>\\n                      <small class=\\\"text-muted text-center\\\">@{{authService.user?.user.username}}</small>\\n                    </div>\\n                    <div class=\\\"list-inline text-center\\\">\\n                      <small class=\\\"list-inline-item mr-3\\\"><strong>Tweets</strong></small>\\n                      <small class=\\\"list-inline-item mr-3\\\"><strong>Following</strong></small>\\n                      <small class=\\\"list-inline-item mr-3\\\"><strong>Followers</strong></small>\\n                    </div>\\n                    <div class=\\\"list-inline text-center\\\">\\n                      <a [routerLink]=\\\"['/profile', authService.user?.user._id, {change: 1}]\\\" routerLinkActive=\\\"router-link-active\\\"  >\\n                        <h4 style=\\\"color:#1DA1F2\\\" class=\\\"list-inline-item mr-5\\\">{{numberOfTweets}}</h4>\\n                      </a>\\n                      <a [routerLink]=\\\"['/profile', authService.user?.user._id, {change: 2}]\\\" routerLinkActive=\\\"router-link-active\\\"  >\\n                        <h4 style=\\\"color:#1DA1F2\\\" class=\\\"list-inline-item mr-5\\\">{{numberOfFollowing}}</h4>\\n                      </a>\\n                      <a [routerLink]=\\\"['/profile', authService.user?.user._id, {change: 3}]\\\" routerLinkActive=\\\"router-link-active\\\"  >\\n                        <h4 style=\\\"color:#1DA1F2\\\" class=\\\"list-inline-item mr-5\\\">{{numberOfFollowers}}</h4>\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"card mt-5\\\" style=\\\"width: 16rem;background-color: #E8F5FD\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <p *ngIf=\\\"bio\\\" class=\\\"text-muted\\\">{{bio | titlecase}}</p>\\n                        <p *ngIf=\\\"location\\\" class=\\\"text-muted\\\"><i class=\\\"fas fa-map-marker-alt mr-3\\\">\\n                          {{location | titlecase}}</i></p>\\n                        <p class=\\\"text-muted\\\"><i class=\\\"far fa-calendar-alt mr-3\\\">\\n                            Joined {{authService.user?.user.dateCreated | date : 'longDate'}}</i></p>\\n                    </div>\\n                  </div>\\n          </div>\\n            <div class=\\\"col-lg-6\\\">\\n              <app-addAndGetTweets (reduce)=reduceSomething($event)></app-addAndGetTweets>\\n            </div>\\n            <div class=\\\"col-lg-3\\\">\\n              <app-suggestions (reduce)=reduceSomething($event)></app-suggestions>\\n            </div>\\n        </div>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\"","import { UserService } from './../_services/user.service';\nimport { AuthService } from './../_services/auth.service';\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\ntoken: any;\nnumberOfTweets: number;\nnumberOfFollowers: number;\nnumberOfFollowing: number;\nbio: any;\nlocation: any;\n  constructor(public authService: AuthService, private userService: UserService) { }\n\n  ngOnInit() {\n    this.token = localStorage.getItem('token');\n    if (this.authService.user) {\n      this.getUserTweets(this.authService.user.user._id);\n    }\n    \n  }\n\n  async getUserTweets(id) {\n    const tweets= await this.userService.getUserTweets();\n    const follow = await this.userService.getUserFollowersFollowing(id)\n    this.numberOfTweets = tweets['tweets'].length;\n    this.bio = tweets['bio']\n    this.location = tweets['location']\n    this.numberOfFollowers = follow['followers'].length;\n    this.numberOfFollowing = follow['following'].length;\n  }\n\n  reduceSomething(model: number) {\n    if(model == -1) {\n      this.numberOfTweets -=1\n    } else if (model == 1) {\n      this.numberOfTweets +=1\n    } else if(model == 2) {\n      this.numberOfFollowing +=1\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container \\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 offset-lg-4 bg-dark auth-form\\\">\\n        <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\"\\n              name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\">\\n              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" \\n              name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          </form>\\n          <small class=\\\"form-text text-muted\\\">New to Twitter? <a [routerLink]=\\\"['/register']\\\" routerLinkActive=\\\"router-link-active\\\" >\\n            Sign up now</a></small>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nmodel: any = {};\nreturnUrl;\nhelper = new JwtHelperService();\n\n\n  constructor(private router: Router, \n    private authService: AuthService, \n    private route: ActivatedRoute,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(res => {\n      this.returnUrl = res['returnUrl'] || '/'\n    } )\n  }\n\n  async login () {\n    try {\n      if (this.loginValidation()) {\n        const user = await this.authService.login(this.model);\n        user['success'] ? (this.alertify.success('Login successful'),\n        localStorage.setItem('token', user['token']),\n        this.router.navigateByUrl(this.returnUrl))\n         : this.alertify.message(user['message'])\n      } else {\n        this.alertify.error('Check your input fields')\n          }\n    } catch (error) {\n      this.alertify.error('Unable to login. Check your email and password');\n    }\n  }\n\n  loginValidation() {\n    if (this.model.email) {\n      if (this.model.password) {\n        return true;\n      } else {\n        this.alertify.message('Enter your password')\n      }\n    } else {\n      this.alertify.message('Enter your email')\n            }\n  }\n\n}\n","module.exports = \".card-image-top {\\r\\n    background-color: #e9ecef;\\r\\n}\\r\\n\\r\\n.img-profile {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.card-body-body {\\r\\n    width: 410px;\\r\\n}\\r\\n\\r\\n.card-you {\\r\\n    width: 410px;\\r\\n}\\r\\n\\r\\n.img-tweet {\\r\\n    width: 40px;\\r\\n}\\r\\n\\r\\n.tabChange > h4 {\\r\\n    color:  #1DA1F2;\\r\\n    border-bottom: 3px solid #1DA1F2;\\r\\n}\\r\\n\\r\\n.unChange {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.btn-primary, .btn-outline-primary, .btn-outline-secondary {\\r\\n    border-radius: 100px;\\r\\n}\\r\\n\\r\\n.clearfix { \\r\\n    display: block; \\r\\n    height: 0; \\r\\n    clear: both;\\r\\n }\\r\\n\\r\\n@media screen and (min-width: 0px) and  (max-width: 767px) {\\r\\n    .button-change {\\r\\n        width: 40px;\\r\\n    }\\r\\n\\r\\n    .list-inline {\\r\\n        float: left;\\r\\n    }\\r\\n\\r\\n    .card-body-body {\\r\\n        width: 340px;\\r\\n    }\\r\\n    \\r\\n    .card-you {\\r\\n        width: 340px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div style=\\\"background-color: #E8F5FD\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-image-top text-center\\\">\\n            <img src=\\\"{{user?.picture}}\\\" alt=\\\"{{user?.username}}\\\" class=\\\"img-profile\\\">\\n            <br>\\n            <strong class=\\\"display-4\\\">{{user?.firstName | titlecase}} {{user?.lastName | titlecase}}</strong>\\n            <br>\\n            <h5 class=\\\"text-muted text-center\\\">@{{user?.username}}</h5>\\n        </div>\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"list-inline text-center\\\">\\n                <small class=\\\"list-inline-item mr-3\\\"><strong>Tweets</strong></small>\\n                <small class=\\\"list-inline-item mr-3\\\"><strong>Following</strong></small>\\n                <small class=\\\"list-inline-item mr-3\\\"><strong>Followers</strong></small>\\n            </div>\\n            <div class=\\\"float-right clearfix mr-5 button-change\\\">\\n              <button *ngIf=\\\"toFollow\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary  \\\" (click)=\\\"follow(user?._id)\\\">Follow</button>\\n              <button *ngIf=\\\"user?._id == authService.user?.user._id\\\" type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" \\n              (click)=\\\"openModal(template)\\\">Edit profile</button>\\n              <button *ngIf=\\\"!toFollow && user?._id != authService.user?.user._id \\\" type=\\\"button\\\" class=\\\"btn btn-primary  \\\"\\n                (click)=\\\"unfollow(user?._id)\\\" (mouseover)=\\\"statusChange='unfollow'\\\" \\n                (mouseleave)=\\\"statusChange='following'\\\">{{statusChange | titlecase}}</button>\\n            </div>\\n            <div class=\\\"list-inline text-center\\\">\\n              <a class=\\\"btn\\\" (click)=\\\"change(1)\\\" [ngClass]=\\\"tabChange == 1 ? 'tabChange' : 'unChange'\\\"  >\\n                <h4  class=\\\"list-inline-item mr-3\\\">{{numberOfTweets}}</h4>\\n              </a>\\n              <a class=\\\"btn\\\" (click)=\\\"change(2)\\\" [ngClass]=\\\"tabChange == 2 ? 'tabChange' : 'unChange'\\\">\\n                <h4  class=\\\"list-inline-item ml-2\\\">\\n                  {{numberOfFollowing}}</h4>\\n              </a>\\n              <a  class=\\\"btn\\\" (click)=\\\"change(3)\\\" [ngClass]=\\\"tabChange == 3 ? 'tabChange' : 'unChange'\\\">\\n                <h4  class=\\\"list-inline-item ml-5\\\">\\n                  {{numberOfFollowers}}</h4>\\n              </a>\\n            </div>\\n        </div>\\n    </div>\\n    <br>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <p class=\\\"text-muted\\\">{{user?.profile?.bio | titlecase}}</p>\\n            <p *ngIf=\\\"user.profile?.location\\\" class=\\\"text-muted\\\"><i class=\\\"fas fa-map-marker-alt mr-2\\\">\\n              {{user?.profile?.location | titlecase}}</i></p>\\n            <p class=\\\"text-muted\\\"><i class=\\\"far fa-calendar-alt\\\">\\n                Joined {{user?.dateCreated | date : 'longDate'}}</i></p>\\n        </div>\\n        <div class=\\\"col-md\\\">\\n          <div *ngIf=\\\"tweets?.length == 0 && tabChange ==1 \\\">\\n            <h1>No tweets yet</h1>\\n          </div>\\n          <div *ngIf=\\\"tabChange == 1\\\">\\n            <div  class=\\\"card card-you\\\" *ngFor=\\\"let tweet of tweets\\\">\\n              <div *ngIf=\\\"tabChange ==1\\\" class=\\\"card-body card-body-body list-inline\\\">\\n                  <a routerLink=\\\"/profile/{{user._id}}\\\" routerLinkActive=\\\"router-link-active\\\" >\\n                    <img class=\\\"list-inline-item img-tweet\\\" src=\\\"{{user.picture}}\\\" alt=\\\"{{user.username}}\\\"\\n                    class=\\\"mr-3\\\">\\n                  </a>\\n                  <a routerLink=\\\"/profile/{{user._id}}\\\" routerLinkActive=\\\"router-link-active\\\" >\\n                    <h6 class=\\\"card-title list-inline-item\\\">{{user.firstName | titlecase}} {{user.lastName | titlecase}}\\n                        <strong>@{{user.username}}</strong></h6>\\n                  </a>\\n                  <p class=\\\"card-text mt-3\\\">{{tweet.tweet}}</p>\\n                <small class=\\\"text-muted \\\">{{tweet.dateTweeted | date : 'longDate'}}</small>\\n              </div>\\n          </div>\\n          </div>\\n          <div *ngIf=\\\"tabChange == 2\\\">\\n            <app-following [userId]=\\\"userId\\\" (toReduce) =reduce($event)></app-following>\\n          </div>\\n          <div *ngIf=\\\"tabChange == 3\\\">\\n              <app-followers [userId]=\\\"userId\\\" (toReduce) =reduce($event)></app-followers>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"tabChange == 1\\\" >\\n            <app-suggestions [toRemove]=\\\"userId\\\"></app-suggestions>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\\n\\n<!-- Modal window -->\\n<ng-template #template>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Compose new Tweet</h4>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <form #profileForm =\\\"ngForm\\\" id=\\\"profileForm\\\" >\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First name\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"profile.firstName\\\">\\n            </div>\\n            <div class=\\\"col\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"profile.lastName\\\">\\n            </div>\\n          </div>\\n          <br>\\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Bio\\\" name=\\\"bio\\\" [(ngModel)]=\\\"profile.bio\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Location\\\" name=\\\"location\\\" [(ngModel)]=\\\"profile.location\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Website\\\" name=\\\"website\\\" [(ngModel)]=\\\"profile.website\\\">\\n          </div>\\n      </form>\\n      <button [disabled]=\\\"!profileForm.dirty\\\" form=\\\"profileForm\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n         (click)=\\\"modalRef.hide();updateProfile()\\\">Save</button>\\n    </div>\\n  </ng-template>\\n\\n\\n\\n\\n\"","import { AuthService } from './../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { UserService } from './../_services/user.service';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  userId: any;\n  numberOfFollowers: number;\n  numberOfFollowing: number;\n  numberOfTweets: number;\n  tweets: any[];\n  tabChange: any = 1;\n  toFollow: boolean;\n  statusChange: string;\n  modalRef: BsModalRef;\n  profile: any = {};\n\n  constructor(private userService: UserService, \n    private alertify: AlertifyService, \n    private route: ActivatedRoute,\n    private modalService: BsModalService,\n    public authService: AuthService) { }\n    \n  async ngOnInit() {\n    this.route.params.subscribe(res => {this.userId = res['id'];})\n    this.route.params.subscribe(res => {this.tabChange = res['change'] || 1 });\n    await this.getUser(this.userId);\n    this.canFollow();\n    this.statusChange = 'following'\n  }\n\n  async getUser(id) {\n    var user = await this.userService.getUser(id);\n    try {\n      if (user['success']) {\n        this.user = user['user'];\n        this.profile = Object.assign({}, {\n          firstName: user['user'].firstName,\n          lastName:user['user'].lastName,\n          bio: user['user'].profile.bio,\n          location: user['user'].profile.location,\n          website: user['user'].profile.website\n        })\n        this.tweets = user['user'].tweets;\n        this.numberOfTweets = user['user'].tweets.length;\n        this.numberOfFollowers = user['numFollowers'];\n        this.numberOfFollowing = user['numFollowing'];\n      } else {\n        this.alertify.error('Could not get user information or user does not exist');\n      }\n    } catch (error) {\n      this.alertify.error(error.message);\n    }\n  }\n\n  change(changes) {\n    this.tabChange = changes;\n  }\n\n  async canFollow() {\n    var suggestions = await this.userService.getSuggestions();\n    var suggested = suggestions['suggestions'];\n    if (suggested.some((e) =>e._id == this.userId)) {\n      this.toFollow = true\n    } else {\n      this.toFollow = false;\n    }\n\n  }\n\n  async follow(id) {\n    await this.userService.followSomeone(id);\n    this.alertify.success('You just followed another user')\n    this.numberOfFollowing += 1;\n  }\n\n  async unfollow(id) {\n    await this.userService.unfollowSomeone(id);\n    this.alertify.success('You just unfollowed another user')\n    this.numberOfFollowing -= 1;\n  }\n\n  reduce(model: number) {\n    if (model == -1) {\n      this.numberOfFollowing -= 1;\n    } else if(model == 1) {\n      this.numberOfFollowing +=1;\n    }\n  }\n\n  update\n\n  // Modal window\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  async updateProfile() {\n    try {\n      var update  = await this.userService.upDateProfile(this.profile);\n      if (update['success']) {\n        this.alertify.success('Your profile has been updated')\n        this.user = Object.assign({picture: this.user.picture, _id: this.user._id, username: this.user.username}, {\n          firstName: this.profile.firstName,\n          lastName:this.profile.lastName,\n          profile :{bio: this.profile.bio,\n          location: this.profile.location,\n          website: this.profile.website}\n        })\n      } else {\n        this.alertify.error('Your profile could not be updated')\n      }\n    } catch (error) {\n      this.alertify.error(error.message);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container \\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4 offset-lg-4 bg-dark auth-form\\\">\\n          <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n              <div class=\\\"form-group\\\" >\\n                  <label for=\\\"firstName\\\">First Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\"\\n                  name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\">\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"lastName\\\">Last Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\"\\n                  name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\">\\n              </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Email</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" \\n                    name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\">\\n                    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n                  </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"  placeholder=\\\"Username\\\"\\n                name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" \\n                name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\">\\n              </div>\\n              <button  type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            </form>\\n            <small class=\\\"form-text text-muted\\\">Already have an account? <a [routerLink]=\\\"['/login']\\\" routerLinkActive=\\\"router-link-active\\\" >\\n              Login now</a></small>\\n      </div>\\n    </div>\\n  </div>\"","import { AlertifyService } from './../_services/alertify.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../_services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: any = {}\n\n  constructor(private authService: AuthService,\n     private router: Router,\n      private alertify: AlertifyService) { }\n\n  async register () {\n    try {\n      if (this.loginValidation()) {\n        var user = await this.authService.register(this.user);\n        user['success'] ? (this.alertify.success('Registration successful'),\n        localStorage.setItem('token', user['token']),\n        this.router.navigate(['']))\n         : this.alertify.message(user['message'])\n      } else {\n        this.alertify.error('Check your input fields')\n          }\n    } catch (error) {\n      this.alertify.error(error.message);\n    }\n  }\n\n  loginValidation() {\n    if (this.user.email) {\n      if (this.user.password) {\n        if (this.user.firstName) {\n          if (this.user.lastName) {\n            if (this.user.username) {\n              return true;\n            } else {\n              this.alertify.error('Enter your username')\n            }\n          } else {\n            this.alertify.error('Enter your last name')\n          }\n        } else {\n          this.alertify.error('Enter your first name')\n        }\n      } else {\n        this.alertify.error('Enter your password')\n      }\n    } else {\n      this.alertify.error('Enter your email')\n            }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input{\\r\\n    border-radius: 30px;\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    border-radius: 50%;\\r\\n    width: 40px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div ngbDropdown class=\\\"d-inline-block\\\">\\n        <input [(ngModel)]=\\\"searchTweet.search\\\" name=\\\"search\\\" (keyup)=\\\"search()\\\" type=\\\"text\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n          <div *ngFor=\\\"let user of users\\\" class=\\\"ml-2\\\">\\n              <a routerLink=\\\"/profile/{{user?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n                <img class=\\\"list-inline-item\\\" src=\\\"{{user?.picture}}\\\" alt=\\\"{{user?.username}}\\\"\\n              class=\\\"mr-2\\\">\\n            <h6 class=\\\"card-title list-inline-item\\\">{{user?.firstName | titlecase}} {{user?.lastName | titlecase}}\\n              <strong class=\\\"mr-3\\\">@{{user?.username}}</strong></h6>\\n              </a>\\n              <hr>\\n          </div>\\n          <small class=\\\"text-muted ml-4\\\">Search all people for <strong>{{searchTweet.search}}</strong></small>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n  \\n  \"","import { UserService } from './../_services/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  searchTweet: any = {};\n  users: any[];\n  unFiltered: any[]\n  allUsers: any[];\n\n  constructor( private userService: UserService) { }\n\n  async search() {\n     const users = await this.userService.getAllUsers();\n     this.allUsers = users['user']\n    this.users = (this.searchTweet.search) ?  this.allUsers.filter(u => u.firstName.toLowerCase()\n    .includes(this.searchTweet.search.toLowerCase()) ) : this.unFiltered;\n  }\n\n  ngOnInit() {\n  }\n\n  route() {\n    window.location.reload();\n  }\n\n}\n","module.exports = \"img {\\r\\n    border-radius: 50%;\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    width: 335px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    width: 335px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    border-radius: 100px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 0px) and (max-width: 1024px) {\\r\\n    .card { display: none; }  \\r\\n  }\"","module.exports = \"<div class=\\\"card\\\" >\\n  <h4 class=\\\"text-center mt-3\\\">Who to follow?</h4>\\n    <div class=\\\"card-body list-inline\\\" *ngFor=\\\"let user of suggestions\\\">\\n        <div class=\\\"float-left\\\">\\n            <a routerLink=\\\"/profile/{{user?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n              <img class=\\\"list-inline-item\\\" src=\\\"{{user?.picture}}\\\" alt=\\\"{{user?.username}}\\\"\\n            class=\\\"mr-3\\\">\\n            </a>\\n        </div>\\n       <div class=\\\"float-left\\\">\\n          <a routerLink=\\\"/profile/{{user?._id}}\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"route()\\\">\\n            <h6 class=\\\"card-title list-inline-item\\\">{{user?.firstName | titlecase}} {{user?.lastName | titlecase}}\\n            <strong>@{{user?.username}}</strong></h6>\\n          </a>\\n          <br>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mt-1 btn-sm\\\" (click)=\\\"follow(user._id)\\\">Follow</button>\\n          <hr>\\n       </div>\\n    </div>\\n    <p class=\\\"text-center\\\"><strong>Made by Samuel Essim</strong></p>\\n    <p class=\\\"text-center text-muted\\\">© 2018 Twitter</p>\\n  </div>\\n\"","import { AuthService } from './../_services/auth.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { UserService } from './../_services/user.service';\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.css']\n})\nexport class SuggestionsComponent implements OnInit {\n  @Input('toRemove') toRemove: any;\n  @Output() reduce = new EventEmitter();\n  suggestions: any[];\n\n  constructor(private userService: UserService,\n     private alertify: AlertifyService, \n     private authService: AuthService) { }\n\n  async ngOnInit() {\n    const suggestion = await this.userService.getSuggestions();\n    this.suggestions = suggestion['suggestions']\n    this.filterSuggestions();\n    \n  }\n\n  async follow(id) {\n    await this.userService.followSomeone(id);\n    this.suggestions.splice(this.suggestions.findIndex(u=> u._id == id), 1)\n    this.alertify.success('You just followed another user')\n    this.reduce.emit(2);\n  }\n\n  private filterSuggestions() {\n    if (this.toRemove && this.toRemove !== this.authService.user.user._id) {\n      this.suggestions.splice(this.suggestions.findIndex( u => u._id == this.toRemove), 1)\n    } else {\n      this.suggestions = this.suggestions\n    }\n    \n  }\n\n  route() {\n    window.location.reload();\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}